buildscript {
    ext {
        kotlinVersion = '1.0.3'
        kumuluzVersion = '2.0.0'
        jerseyVersion = '2.17'      //required by KumuluzEE 2.0.0
        weldVersion = '2.3.3.Final' //required by KumuluzEE 2.0.0
        port = 18080                //application listening port
    }

    repositories {
        jcenter()
    }

    dependencies {
        classpath 'org.asciidoctor:asciidoctorj-pdf:1.5.0-alpha.11'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
    }
}

plugins {
    id "org.standardout.versioneye" version "1.4.0"
    id "com.github.hierynomus.license" version "0.13.1"
    id "org.asciidoctor.convert" version "1.5.3"
    id "com.github.lkishalmi.gatling" version "0.4.1"
}

apply plugin: 'application'
apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'groovy'
apply plugin: 'scala'

sourceCompatibility = 1.8
targetCompatibility = 1.8

mainClassName = 'everything.as.code.BookApplication'

repositories {
    mavenLocal()
    jcenter()
}

dependencies {
    // KumuluzEE micro JEE container
    compile "com.kumuluz.ee:kumuluzee-core:$kumuluzVersion"
    compile "com.kumuluz.ee:kumuluzee-servlet-jetty:$kumuluzVersion"
    compile "com.kumuluz.ee:kumuluzee-jax-rs-jersey:$kumuluzVersion"
    compile "com.kumuluz.ee:kumuluzee-cdi-weld:$kumuluzVersion"

    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion"

    testCompile 'org.codehaus.groovy:groovy-all:2.4.7'
    testCompile 'org.spockframework:spock-core:1.1-groovy-2.4-rc-1'
    testRuntime 'cglib:cglib-nodep:3.2.4'
    testRuntime 'org.objenesis:objenesis:2.4'
    testRuntime 'com.athaydes:spock-reports:1.2.12'

    testCompile 'io.rest-assured:rest-assured:3.0.1'

    testRuntime 'org.slf4j:slf4j-simple:1.7.13'

    testCompile "org.scala-lang:scala-library:2.11.8"
}

// copy all resources into classes folder (required by KumuluzEE and Deltaspike)
sourceSets {
    main {
        output.resourcesDir = "build/classes"
        output.classesDir = 'build/classes'
    }
}

test {
    exclude '**/*Integration*'
    exclude '**/*Performance*'

    reports {
        junitXml.enabled = false
        html.enabled = true
    }
}

// set appropriate KumuluzEE listening port when application:run
tasks.withType(JavaExec) {
    environment = ['PORT': port]
}

gatling {
    toolVersion = '2.2.2'
    jvmArgs = ['-server', '-Xmx512M', '-Djava.net.preferIPv4Stack=true', "-Djava.net.preferIPv6Addresses=false"]
    simulations = {
        include "**/*PerformanceTest.scala"
    }
}

asciidoctorj {
    version = '1.5.4.1'
}

asciidoctor {
    backends 'html5', 'pdf'
    resources {
        from('src/docs/architecture') {
            include 'images/**/*.png'
            include 'images/**/*.jpg'
        }
    }
    options doctype: 'article'
    attributes 'source-highlighter': 'coderay'
}

versioneye {
    // dependencies = transitive
    includeSubProjects = true
    includePlugins = false
    exclude 'testCompile', 'testRuntime'
}

license {
    skipExistingHeaders = true
    header rootProject.file('LICENSE')
    includes(["**/*.java", "**/*.kt", "**/*.groovy", "**/*.scala"])
    mapping {
        java = 'SLASHSTAR_STYLE'
        kt = 'SLASHSTAR_STYLE'
        groovy = 'SLASHSTAR_STYLE'
    }
}